buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://maven.parchmentmc.org' }

        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '6+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '+'
    }
}


plugins {
    id 'java'
    id 'idea'
    id 'maven-publish'
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'org.spongepowered.mixin'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

archivesBaseName = "${mod_archive_name}-${minecraft_version}"
version = project.mod_version
group = project.maven_group

repositories {
    maven {
        url = "https://maven.theillusivec4.top/"
    }
    maven { url '"https://maven.theillusivec4.top/' }
}

minecraft {
    //mappings channel: "snapshot", version: "20201028-1.16.3"

    mappings channel: "${mapping_channel}", version: "${mapping_version}-${minecraft_version}"

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            arg "-mixin.config=${mod_id}-mixins.json"
            // This makes dependencies with mixins work
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
            // This makes dependencies with mixins work
            mods {
                modid {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run')
            arg "-mixin.config=${mod_id}-mixins.json"
            // This makes dependencies with mixins work
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
            // This makes dependencies with mixins work
            mods {
                modid {
                    source sourceSets.main
                }
            }
        }
        data {
            workingDirectory project.file('run')
            arg "-mixin.config=${mod_id}-mixins.json"
            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', '${mod_id}', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                modid {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }


dependencies {

    minecraft([
            group  : "net.minecraftforge",
            name   : 'forge',
            version: "$project.minecraft_version-${project.forgeversion}"
    ])


    if (System.getProperty("idea.sync.active") != "true") {
        annotationProcessor 'org.spongepowered:mixin:0.8.3:processor'
    }

    implementation fg.deobf(files("libs/Library_of_Exile-1.20.1-1.2.3.jar"))
    implementation fg.deobf("top.theillusivec4.curios:curios-forge:${curios_version}")

}


// CURSEFORGE STUFF


jar {
    manifest {
        attributes([
                "MixinConnector": "com.robertx22.age_of_exile.mmorpg.MixinConnector",
                "MixinConfigs"  : "mmorpg-mixins.json"
        ])
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

/*
curseforge {

    def curseProp = new Properties()
    File secretPropsFile = file("key.properties")
    curseProp.load(secretPropsFile.newInputStream())

    project {
        apiKey = curseProp.getProperty('curseKey')
        id = "${curse_id}"
        releaseType = "${curse_release}"
        changelogType = 'text'
        changelog = file('CHANGELOG.md')
        addGameVersion("${project.minecraft_version}")
        addGameVersion("Forge")
        addGameVersion("Java 8")

        relations {          
            requiredDependency 'library-of-exile'
            requiredDependency 'curios'
            requiredDependency 'dungeons-of-exile'
			requiredDependency 'divine-missions'
        }
        mainArtifact(jar)

        afterEvaluate {
            uploadTask.dependsOn("jar")
        }
    }
    options {
        forgeGradleIntegration = true
    }
}

 */

apply plugin: 'org.spongepowered.mixin'
mixin {
    add sourceSets.main, "mmorpg.refmap.json"
}
